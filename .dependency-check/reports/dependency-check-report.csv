"Project","ScanDate","DependencyName","DependencyPath","Description","License","Md5","Sha1","Identifiers","CPE","CVE","CWE","Vulnerability","Source","CVSSv2_Severity","CVSSv2_Score","CVSSv2","CVSSv3_BaseSeverity","CVSSv3_BaseScore","CVSSv3","CPE Confidence","Evidence Count","VendorProject","Product","Name","DateAdded","ShortDescription","RequiredAction","DueDate","Notes"
DIGITAL_LIBRARY_PROJECT,"Mon, 30 Dec 2024 11:12:09 GMT",path-to-regexp:0.1.10,/src/package-lock.json?path-to-regexp,"","","","",pkg:npm/path-to-regexp@0.1.10,"",CVE-2024-52798,CWE-1333 Inefficient Regular Expression Complexity,"path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296.",OSSINDEX,HIGH,8.699999809265137,CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N,"","","",HIGHEST,3,"","","","","","","",""
DIGITAL_LIBRARY_PROJECT,"Mon, 30 Dec 2024 11:12:09 GMT",path-to-regexp:0.1.10,/src/package-lock.json?path-to-regexp,"","","","",pkg:npm/path-to-regexp@0.1.10,"",GHSA-rhx6-c78j-4q9w,CWE-1333 Inefficient Regular Expression Complexity,"### Impact  The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of `path-to-regexp`, originally reported in CVE-2024-45296  ### Patches  Upgrade to 0.1.12.  ### Workarounds  Avoid using two parameters within a single path segment, when the separator is not `.` (e.g. no `/:a-:b`). Alternatively, you can define the regex used for both parameters and ensure they do not overlap to allow backtracking.  ### References  - https://github.com/advisories/GHSA-9wv6-86v2-598j - https://blakeembrey.com/posts/2024-09-web-redos/",NPM,"","","","","","",HIGHEST,3,"","","","","","","",""
